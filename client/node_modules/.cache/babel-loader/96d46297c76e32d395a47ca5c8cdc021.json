{"ast":null,"code":"import _classCallCheck from\"C:/Users/scs/OneDrive/Desktop/9 hours insa_allah/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/scs/OneDrive/Desktop/9 hours insa_allah/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/scs/OneDrive/Desktop/9 hours insa_allah/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/scs/OneDrive/Desktop/9 hours insa_allah/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import PaypalExpressBtn from\"react-paypal-express-checkout\";import{jsx as _jsx}from\"react/jsx-runtime\";var PaypalButton=/*#__PURE__*/function(_React$Component){_inherits(PaypalButton,_React$Component);var _super=_createSuper(PaypalButton);function PaypalButton(){_classCallCheck(this,PaypalButton);return _super.apply(this,arguments);}_createClass(PaypalButton,[{key:\"render\",value:function render(){var _this=this;var onSuccess=function onSuccess(payment){// Congratulation, it came here means everything's fine!\nconsole.log(\"The payment was succeeded!\",payment);// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n_this.props.tranSuccess(payment);};var onCancel=function onCancel(data){// User pressed \"cancel\" or close Paypal's popup!\nconsole.log(\"The payment was cancelled!\",data);// You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n};var onError=function onError(err){// The main Paypal's script cannot be loaded or somethings block the loading of that script!\nconsole.log(\"Error!\",err);// Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n// => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n};var env=\"sandbox\";// you can set here to 'production' for production\nvar currency=\"USD\";// or you can set this value from your props or state\nvar total=this.props.total;// same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n// Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\nvar client={sandbox:\"YOUR-sandbox-APP-ID\",production:\"YOUR-PRODUCTION-APP-ID\"};// In order to get production's app-ID, you will have to send your app to Paypal for approval first\n// For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n//   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n// For production app-ID:\n//   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n// NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\nvar style={size:\"small\",color:\"blue\",shape:\"rect\",label:\"checkout\",tagline:false};return/*#__PURE__*/_jsx(PaypalExpressBtn,{env:env,client:client,currency:currency,total:total,onError:onError,onSuccess:onSuccess,onCancel:onCancel,style:style});}}]);return PaypalButton;}(React.Component);export{PaypalButton as default};","map":{"version":3,"names":["React","PaypalExpressBtn","PaypalButton","onSuccess","payment","console","log","props","tranSuccess","onCancel","data","onError","err","env","currency","total","client","sandbox","production","style","size","color","shape","label","tagline","Component"],"sources":["C:/Users/scs/OneDrive/Desktop/9 hours insa_allah/client/src/components/mainpages/cart/PaypalButton.js"],"sourcesContent":["import React from \"react\";\r\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\r\n\r\nexport default class PaypalButton extends React.Component {\r\n  render() {\r\n    const onSuccess = (payment) => {\r\n      // Congratulation, it came here means everything's fine!\r\n      console.log(\"The payment was succeeded!\", payment);\r\n      // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n      this.props.tranSuccess(payment);\r\n    };\r\n\r\n    const onCancel = (data) => {\r\n      // User pressed \"cancel\" or close Paypal's popup!\r\n      console.log(\"The payment was cancelled!\", data);\r\n      // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n    };\r\n\r\n    const onError = (err) => {\r\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n      console.log(\"Error!\", err);\r\n      // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n    };\r\n\r\n    let env = \"sandbox\"; // you can set here to 'production' for production\r\n    let currency = \"USD\"; // or you can set this value from your props or state\r\n    let total = this.props.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n    const client = {\r\n      sandbox: \"YOUR-sandbox-APP-ID\",\r\n      production: \"YOUR-PRODUCTION-APP-ID\",\r\n    };\r\n    // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n    // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n    // For production app-ID:\r\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n    let style = {\r\n      size: \"small\",\r\n      color: \"blue\",\r\n      shape: \"rect\",\r\n      label: \"checkout\",\r\n      tagline: false,\r\n    };\r\n\r\n    return (\r\n      <PaypalExpressBtn\r\n        env={env}\r\n        client={client}\r\n        currency={currency}\r\n        total={total}\r\n        onError={onError}\r\n        onSuccess={onSuccess}\r\n        onCancel={onCancel}\r\n        style={style}\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"mappings":"oiBAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,iBAAgB,KAAM,+BAA+B,CAAC,8CAExCC,aAAY,uQAC/B,iBAAS,gBACP,GAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIC,OAAO,CAAK,CAC7B;AACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEF,OAAO,CAAC,CAClD;AACA,KAAI,CAACG,KAAK,CAACC,WAAW,CAACJ,OAAO,CAAC,CACjC,CAAC,CAED,GAAMK,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,IAAI,CAAK,CACzB;AACAL,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEI,IAAI,CAAC,CAC/C;AACF,CAAC,CAED,GAAMC,QAAO,CAAG,QAAVA,QAAO,CAAIC,GAAG,CAAK,CACvB;AACAP,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEM,GAAG,CAAC,CAC1B;AACA;AACF,CAAC,CAED,GAAIC,IAAG,CAAG,SAAS,CAAE;AACrB,GAAIC,SAAQ,CAAG,KAAK,CAAE;AACtB,GAAIC,MAAK,CAAG,IAAI,CAACR,KAAK,CAACQ,KAAK,CAAE;AAC9B;AAEA,GAAMC,OAAM,CAAG,CACbC,OAAO,CAAE,qBAAqB,CAC9BC,UAAU,CAAE,wBACd,CAAC,CACD;AACA;AACA;AACA;AACA;AAEA;AACA,GAAIC,MAAK,CAAG,CACVC,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,MAAM,CACbC,KAAK,CAAE,MAAM,CACbC,KAAK,CAAE,UAAU,CACjBC,OAAO,CAAE,KACX,CAAC,CAED,mBACE,KAAC,gBAAgB,EACf,GAAG,CAAEX,GAAI,CACT,MAAM,CAAEG,MAAO,CACf,QAAQ,CAAEF,QAAS,CACnB,KAAK,CAAEC,KAAM,CACb,OAAO,CAAEJ,OAAQ,CACjB,SAAS,CAAER,SAAU,CACrB,QAAQ,CAAEM,QAAS,CACnB,KAAK,CAAEU,KAAM,EACb,CAEN,CAAC,0BA1DuCnB,KAAK,CAACyB,SAAS,SAApCvB,YAAY"},"metadata":{},"sourceType":"module"}