{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scs\\\\OneDrive\\\\Desktop\\\\9 hours insa_allah\\\\client\\\\src\\\\components\\\\mainpages\\\\cart\\\\PaypalButton.js\";\nimport React from \"react\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaypalButton(to) {\n  const onSuccess = payment => {\n    // Congratulation, it came here means everything's fine!\n    console.log(\"The payment was succeeded!\", payment);\n    // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n    this.props.tranSuccess(payment);\n  };\n  const onCancel = data => {\n    // User pressed \"cancel\" or close Paypal's popup!\n    console.log(\"The payment was cancelled!\", data);\n    // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n  };\n\n  const onError = err => {\n    // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n    console.log(\"Error!\", err);\n    // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n    // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n  };\n\n  let env = \"sandbox\"; // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n  let total = this.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n  // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n  const client = {\n    sandbox: \"AZPHIaLi9FW_xyRn7Q2c5u7XAAA4ywJzezft7j2cJx2AZdLe5FBSm-FUfDUMKesNKYBBCZ4UuoDnYHP8\",\n    production: \"YOUR-PRODUCTION-APP-ID\"\n  };\n  // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n  // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n  //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n  // For production app-ID:\n  //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n\n  // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n  let style = {\n    size: \"small\",\n    color: \"blue\",\n    shape: \"rect\",\n    label: \"checkout\",\n    tagline: false\n  };\n  return /*#__PURE__*/_jsxDEV(PaypalExpressBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: total,\n    onError: onError,\n    onSuccess: onSuccess,\n    onCancel: onCancel,\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n_c = PaypalButton;\nvar _c;\n$RefreshReg$(_c, \"PaypalButton\");","map":{"version":3,"names":["React","PaypalExpressBtn","PaypalButton","to","onSuccess","payment","console","log","props","tranSuccess","onCancel","data","onError","err","env","currency","total","client","sandbox","production","style","size","color","shape","label","tagline"],"sources":["C:/Users/scs/OneDrive/Desktop/9 hours insa_allah/client/src/components/mainpages/cart/PaypalButton.js"],"sourcesContent":["import React from \"react\";\r\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\r\n\r\nexport default function PaypalButton (to) {\r\n \r\n    const onSuccess = (payment) => {\r\n      // Congratulation, it came here means everything's fine!\r\n      console.log(\"The payment was succeeded!\", payment);\r\n      // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n      this.props.tranSuccess(payment);\r\n    };\r\n\r\n    const onCancel = (data) => {\r\n      // User pressed \"cancel\" or close Paypal's popup!\r\n      console.log(\"The payment was cancelled!\", data);\r\n      // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n    };\r\n\r\n    const onError = (err) => {\r\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n      console.log(\"Error!\", err);\r\n      // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n    };\r\n\r\n    let env = \"sandbox\"; // you can set here to 'production' for production\r\n    let currency = \"USD\"; // or you can set this value from your props or state\r\n    let total = this.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n    const client = {\r\n      sandbox:\r\n        \"AZPHIaLi9FW_xyRn7Q2c5u7XAAA4ywJzezft7j2cJx2AZdLe5FBSm-FUfDUMKesNKYBBCZ4UuoDnYHP8\",\r\n      production: \"YOUR-PRODUCTION-APP-ID\",\r\n    };\r\n    // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n    // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n    // For production app-ID:\r\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n    let style = {\r\n      size: \"small\",\r\n      color: \"blue\",\r\n      shape: \"rect\",\r\n      label: \"checkout\",\r\n      tagline: false,\r\n    };\r\n\r\n    return (\r\n      <PaypalExpressBtn\r\n        env={env}\r\n        client={client}\r\n        currency={currency}\r\n        total={total}\r\n        onError={onError}\r\n        onSuccess={onSuccess}\r\n        onCancel={onCancel}\r\n        style={style}\r\n      />\r\n    );\r\n  }\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC;AAE7D,eAAe,SAASC,YAAY,CAAEC,EAAE,EAAE;EAEtC,MAAMC,SAAS,GAAIC,OAAO,IAAK;IAC7B;IACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,OAAO,CAAC;IAClD;IACA,IAAI,CAACG,KAAK,CAACC,WAAW,CAACJ,OAAO,CAAC;EACjC,CAAC;EAED,MAAMK,QAAQ,GAAIC,IAAI,IAAK;IACzB;IACAL,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEI,IAAI,CAAC;IAC/C;EACF,CAAC;;EAED,MAAMC,OAAO,GAAIC,GAAG,IAAK;IACvB;IACAP,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEM,GAAG,CAAC;IAC1B;IACA;EACF,CAAC;;EAED,IAAIC,GAAG,GAAG,SAAS,CAAC,CAAC;EACrB,IAAIC,QAAQ,GAAG,KAAK,CAAC,CAAC;EACtB,IAAIC,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC;EACxB;;EAEA,MAAMC,MAAM,GAAG;IACbC,OAAO,EACL,kFAAkF;IACpFC,UAAU,EAAE;EACd,CAAC;EACD;EACA;EACA;EACA;EACA;;EAEA;EACA,IAAIC,KAAK,GAAG;IACVC,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,UAAU;IACjBC,OAAO,EAAE;EACX,CAAC;EAED,oBACE,QAAC,gBAAgB;IACf,GAAG,EAAEX,GAAI;IACT,MAAM,EAAEG,MAAO;IACf,QAAQ,EAAEF,QAAS;IACnB,KAAK,EAAEC,KAAM;IACb,OAAO,EAAEJ,OAAQ;IACjB,SAAS,EAAER,SAAU;IACrB,QAAQ,EAAEM,QAAS;IACnB,KAAK,EAAEU;EAAM;IAAA;IAAA;IAAA;EAAA,QACb;AAEN;AAAC,KA3DqBlB,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}